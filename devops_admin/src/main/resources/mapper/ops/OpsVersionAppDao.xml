<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bee.devops.admin.core.common.dao.ops.OpsVersionAppDao">
  <resultMap id="BaseResultMap" type="com.bee.devops.admin.core.common.entity.ops.OpsVersionApp">
    <id column="APP_VER_ID" jdbcType="BIGINT" property="appVerId" />
    <result column="APP_CODE" jdbcType="INTEGER" property="appCode" />
    <result column="APP_ID" jdbcType="BIGINT" property="appId" />
    <result column="VERSION_CODE" jdbcType="VARCHAR" property="versionCode" />
    <result column="COMMIT_ID" jdbcType="VARCHAR" property="commitId" />
    <result column="STATUS" jdbcType="INTEGER" property="status" />
    <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="OPERATE_USER_ID" jdbcType="BIGINT" property="operateUserId" />
    <result column="TAG_URL" property="tagUrl" jdbcType="VARCHAR"/>
    <result column="ENV_NAME" property="envName" jdbcType="VARCHAR"/>
    <result column="PRO_NAME" property="proName" jdbcType="VARCHAR"/>
    <result column="APP_NAME" property="appName" jdbcType="VARCHAR"/>
    <result column="APP_GIT_URL" property="appGitUrl" jdbcType="VARCHAR"/>
    <result column="REAL_NAME" property="operateUserName" jdbcType="VARCHAR"/>
    <result column="USED" property="used" jdbcType="INTEGER"/>
  </resultMap>
  
  <resultMap id="AppVersionVoResultMap" type="com.bee.devops.admin.core.vo.response.AppEnvProCodeVo" >
  	<result column="ENV_CODE" property="envCode" jdbcType="VARCHAR"/>
    <result column="PRO_CODE" property="proCode" jdbcType="VARCHAR"/>
    <result column="APP_CODE" property="appCode" jdbcType="VARCHAR"/>
  </resultMap>
  
  <select id="getMaxVersionCode" resultType="String">
  	SELECT MAX(VERSION_CODE) FROM OPS_VERSION_APP WHERE APP_ID=#{appId} AND VERSION_CODE LIKE "%"#{todayTime}"%"
  </select>

  <select id="getNewestVersion" resultType="String">
    SELECT MAX(VERSION_CODE) FROM OPS_VERSION_APP WHERE APP_ID=#{appId}
  </select>

    <select id="searchAppVersion" resultMap="BaseResultMap">
      SELECT av.*, dp.PRO_NAME, da.APP_NAME, da.APP_GIT_URL, au.REAL_NAME
      FROM OPS_VERSION_APP av
      LEFT JOIN OPS_BASE_APP da on da.APP_ID = av.APP_ID
      LEFT JOIN OPS_BASE_PRO dp on dp.PRO_ID = da.PRO_ID
      LEFT JOIN ADMIN_USER au ON au.ADMIN_USER_ID = av.OPERATE_USER_ID
      WHERE da.PRO_ID = #{proId}
      <if test="appName != null and appName !=''">
        AND da.APP_NAME LIKE "%"#{appName}"%"
      </if>
      ORDER BY av.UPDATE_TIME DESC,av.CREATE_TIME DESC
    </select>

    <select id="getAppVersionNotUsedCount" resultType="INTEGER">
      SELECT count(av.APP_VER_ID)
      FROM OPS_VERSION_APP av
      LEFT JOIN OPS_BASE_APP da on da.APP_ID = av.APP_ID
      LEFT JOIN OPS_BASE_PRO dp on dp.PRO_ID = da.PRO_ID
      LEFT JOIN ADMIN_USER au ON au.ADMIN_USER_ID = av.OPERATE_USER_ID
      WHERE da.PRO_ID = #{proId} AND av.USED = 0
    </select>

   <select id="searchAppVersionByid" resultMap="BaseResultMap">
    SELECT av.VERSION_CODE,av.APP_VER_ID,av.DESCRIPTION FROM OPS_VERSION_APP av
		LEFT JOIN OPS_ASSEMBLE_APP daer ON av.APP_ID = daer.APP_ID
		LEFT JOIN OPS_BASE_APP da ON daer.APP_ID = da.APP_ID
		WHERE 1=1
	<if test="appId != null and appId !=''">
		AND daer.APP_ID = #{appId}
	</if>
	<if test="proId != null and proId !=''">
		AND daer.PRO_ID = #{proId}
	</if>
	<if test="envId != null and envId !=''">
		AND daer.ENV_ID = #{envId}
	</if>
    GROUP BY av.VERSION_CODE ORDER BY av.VERSION_CODE DESC LIMIT 15
  </select>

  <select id="getCodes" resultMap="AppVersionVoResultMap">
  	SELECT
  	<if test="envId != null and envId != ''">
  	de.ENV_CODE,
	</if>
  	da.APP_CODE,dp.PRO_CODE FROM OPS_ASSEMBLE_APP daer
		LEFT JOIN OPS_BASE_ENV de ON daer.ENV_ID = de.ENV_ID
		LEFT JOIN OPS_BASE_APP da ON daer.APP_ID = da.APP_ID
		LEFT JOIN OPS_BASE_PRO dp ON da.PRO_ID = dp.PRO_ID
	WHERE 1 = 1
	<if test="envId != null and envId != ''">
	AND daer.ENV_ID = #{envId}
	</if>
	<if test="appId != null and appId != ''">
	AND daer.APP_ID = #{appId}
	</if>
	<if test="proId != null and proId != ''">
	AND daer.PRO_ID = #{proId}
	</if>
  </select>

  <!--根据项目id和应用id获取对应的项目编码及应用编码-->
  <select id="getProCodeAndAppCode" resultMap="AppVersionVoResultMap">
    SELECT
      a.APP_ID,
      a.APP_CODE,
      p.PRO_ID,
      p.PRO_CODE
    FROM
      OPS_BASE_APP a
      INNER JOIN OPS_BASE_PRO p ON a.PRO_ID = p.PRO_ID
    WHERE
      a.APP_ID = #{appId}
      AND a.PRO_ID = #{proId}
  </select>
  
  <sql id="Base_Column_List">
    APP_VER_ID, APP_CODE, APP_ID, APP_VER_NAME, VERSION_CODE, COMMIT_ID, STATUS, 
    DESCRIPTION, CREATE_TIME, UPDATE_TIME, OPERATE_USER_ID
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from OPS_VERSION_APP
    where APP_VER_ID = #{appVerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from OPS_VERSION_APP
    where APP_VER_ID = #{appVerId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bee.devops.admin.core.common.entity.ops.OpsVersionApp">
    insert into OPS_VERSION_APP (APP_VER_ID, APP_CODE, APP_ID,
      VERSION_CODE, COMMIT_ID,
      STATUS, DESCRIPTION, CREATE_TIME,
      UPDATE_TIME, OPERATE_USER_ID)
    values (#{appVerId,jdbcType=INTEGER}, #{appCode,jdbcType=INTEGER}, #{appId,jdbcType=INTEGER},
      #{versionCode,jdbcType=VARCHAR}, #{commitId,jdbcType=VARCHAR},
      #{status,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{operateUserId,jdbcType=INTEGER})
  </insert>

  <!--插入应用版本后返回主键-->
  <insert id="insertSelective" parameterType="com.bee.devops.admin.core.common.entity.ops.OpsVersionApp">
    <selectKey keyProperty="appVerId" order="AFTER" resultType="java.lang.Long">
      select last_insert_id()
    </selectKey>
    insert into OPS_VERSION_APP
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="appVerId != null">
        APP_VER_ID,
      </if>
      <if test="appCode != null">
        APP_CODE,
      </if>
      <if test="appId != null">
        APP_ID,
      </if>
      <if test="versionCode != null">
        VERSION_CODE,
      </if>
      <if test="commitId != null">
        COMMIT_ID,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="description != null">
        DESCRIPTION,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="operateUserId != null">
        OPERATE_USER_ID,
      </if>
      <if test="tagUrl != null">
        TAG_URL,
      </if>
      <if test="used != null">
        USED,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="appVerId != null">
        #{appVerId,jdbcType=INTEGER},
      </if>
      <if test="appCode != null">
        #{appCode,jdbcType=INTEGER},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=INTEGER},
      </if>
      <if test="versionCode != null">
        #{versionCode,jdbcType=VARCHAR},
      </if>
      <if test="commitId != null">
        #{commitId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateUserId != null">
        #{operateUserId,jdbcType=INTEGER},
      </if>
      <if test="tagUrl != null">
        #{tagUrl,jdbcType=VARCHAR},
      </if>
      <if test="used != null">
        #{used,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bee.devops.admin.core.common.entity.ops.OpsVersionApp">
    update OPS_VERSION_APP
    <set>
      <if test="appCode != null">
        APP_CODE = #{appCode,jdbcType=INTEGER},
      </if>
      <if test="appId != null">
        APP_ID = #{appId,jdbcType=INTEGER},
      </if>
      <if test="versionCode != null">
        VERSION_CODE = #{versionCode,jdbcType=VARCHAR},
      </if>
      <if test="commitId != null">
        COMMIT_ID = #{commitId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateUserId != null">
        OPERATE_USER_ID = #{operateUserId,jdbcType=INTEGER},
      </if>
      <if test="used != null">
        USED = #{used,jdbcType=INTEGER},
      </if>
    </set>
    where APP_VER_ID = #{appVerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bee.devops.admin.core.common.entity.ops.OpsVersionApp">
    update OPS_VERSION_APP
    set APP_CODE = #{appCode,jdbcType=INTEGER},
      APP_ID = #{appId,jdbcType=INTEGER},
      VERSION_CODE = #{versionCode,jdbcType=VARCHAR},
      COMMIT_ID = #{commitId,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      OPERATE_USER_ID = #{operateUserId,jdbcType=INTEGER}
    where APP_VER_ID = #{appVerId,jdbcType=INTEGER}
  </update>

  <select id="selectByEnvId" resultType="com.bee.devops.admin.core.common.entity.ops.OpsAssembleApp">
  	select
	OPS_BASE_APP.APP_ID,
	OPS_BASE_APP.APP_NAME,
	OPS_BASE_ENV.ENV_ID
	from
	OPS_ASSEMBLE_APP left join OPS_BASE_ENV on OPS_ASSEMBLE_APP.ENV_ID = OPS_BASE_ENV.ENV_ID
	left join OPS_BASE_APP on OPS_ASSEMBLE_APP.APP_ID = OPS_BASE_APP.APP_ID
	where OPS_BASE_ENV.ENV_ID = #{envId}
  </select>

  <select id="getDataByVersionCode" resultMap="BaseResultMap">
  	select DESCRIPTION FROM OPS_VERSION_APP WHERE VERSION_CODE = #{versionCode}
  </select>

  <select id="getDataByAppVerId" resultMap="BaseResultMap">
  	 select
  	 <include refid="Base_Column_List"/>
  	 FROM OPS_VERSION_APP WHERE APP_VER_ID = #{appVerId}
  </select>

  <select id="getMaxAppVersionId" resultType="LONG">
    SELECT APP_VER_ID
    FROM OPS_VERSION_APP
    WHERE APP_VER_ID=(SELECT MAX(APP_VER_ID) FROM OPS_VERSION_APP WHERE APP_ID=#{appId})
  </select>

  <select id="queryAppVersionsByAppEnvId" resultMap="BaseResultMap">
     SELECT
     *
     FROM OPS_VERSION_APP WHERE APP_ID = #{appId} ORDER BY VERSION_CODE DESC LIMIT 20
  </select>
  
  <select id="queryVersionByCommitId" resultMap="BaseResultMap">
    SELECT * FROM OPS_VERSION_APP WHERE COMMIT_ID = #{commitId}
  </select>
  
</mapper>